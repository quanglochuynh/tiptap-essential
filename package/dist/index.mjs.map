{"version":3,"sources":["../src/TipTapEssential/useTipTap.ts","../src/TipTapEssential/MenuBar.tsx","../src/TipTapEssential/ContentEditor.tsx"],"sourcesContent":["import { ChangeEvent, useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { useEditor, Editor } from \"@tiptap/react\";\nimport Underline from \"@tiptap/extension-underline\";\nimport { Level } from \"@tiptap/extension-heading\";\nimport Placeholder from \"@tiptap/extension-placeholder\";\nimport Image from \"@tiptap/extension-image\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport StarterKit from \"@tiptap/starter-kit\";\n\ntype Props = {\n  placeholder?: string;\n  initContent?: string;\n  onChange: (content: string) => void;\n  uploadImage?: (file: File) => Promise<string>;\n};\n\nexport default function useTipTap({\n  placeholder,\n  initContent,\n  onChange,\n  uploadImage,\n}: Props) {\n  const editor = useEditor({\n    content: initContent || \"\",\n    extensions: [\n      StarterKit.configure({\n        heading: {\n          levels: [1, 2, 3, 4, 5, 6],\n        },\n      }),\n      Placeholder.configure({\n        placeholder: placeholder || \"\",\n      }),\n      Image.configure({\n        inline: true,\n      }),\n      TextAlign.configure({\n        types: [\"heading\", \"paragraph\"],\n      }),\n      Underline,\n      Highlight,\n    ],\n  }) as Editor;\n\n  useEffect(() => {\n    if (editor) {\n      onChange(editor.getHTML());\n    }\n  }, [editor, onChange]);\n\n  const toggleBold = useCallback(() => {\n    editor.chain().focus().toggleBold().run();\n  }, [editor]);\n\n  const toggleUnderline = useCallback(() => {\n    editor.chain().focus().toggleUnderline().run();\n  }, [editor]);\n\n  const toggleItalic = useCallback(() => {\n    editor.chain().focus().toggleItalic().run();\n  }, [editor]);\n\n  const toggleStrike = useCallback(() => {\n    editor.chain().focus().toggleStrike().run();\n  }, [editor]);\n\n  const toggleNormal = useCallback(() => {\n    editor.chain().focus().setParagraph().run();\n  }, [editor]);\n\n  const toggleHeading = useCallback(\n    (level: Level) => {\n      editor.chain().focus().setHeading({ level }).run();\n    },\n    [editor]\n  );\n\n  const heading = editor ? editor.getAttributes(\"heading\") : undefined;\n\n  const currentHeading = useMemo((): Level | 0 => {\n    if (heading) {\n      return heading.level || 0;\n    }\n    return 0;\n  }, [heading]);\n\n  const toggleCode = useCallback(() => {\n    editor.chain().focus().toggleCode().run();\n  }, [editor]);\n\n  const toggleBlockquote = useCallback(() => {\n    editor.chain().focus().toggleBlockquote().run();\n  }, [editor]);\n\n  const toggleBulletList = useCallback(() => {\n    editor.chain().focus().toggleBulletList().run();\n  }, [editor]);\n\n  const toggleOrderedList = useCallback(() => {\n    editor.chain().focus().toggleOrderedList().run();\n  }, [editor]);\n\n  const splitListItem = useCallback(() => {\n    editor.chain().focus().splitListItem(\"listItem\").run();\n  }, [editor]);\n\n  const toggleTextAlign = useCallback(\n    (align: \"left\" | \"center\" | \"right\" | \"justify\") => {\n      editor.chain().focus().setTextAlign(align).run();\n    },\n    [editor]\n  );\n\n  const toggleHighlight = useCallback(() => {\n    editor.chain().focus().toggleHighlight().run();\n  }, [editor]);\n\n  const toggleUndo = useCallback(() => {\n    editor.chain().focus().undo().run();\n  }, [editor]);\n\n  const toggleRedo = useCallback(() => {\n    editor.chain().focus().redo().run();\n  }, [editor]);\n\n  const handleSelectImg = useCallback(\n    async ({ target }: ChangeEvent<HTMLInputElement>) => {\n      const files = target.files;\n      if (!files) return undefined;\n      if (files.length === 0) return undefined;\n      if (files[0].type.indexOf(\"image/\") === -1) return undefined;\n      if (!uploadImage) return undefined;\n      try {\n        const ret = (await uploadImage(files[0])) as string;\n        editor.chain().focus().setImage({ src: ret }).run();\n      } catch (error) {\n        alert((error as Error).message);\n        return;\n      }\n    },\n    [editor, uploadImage]\n  );\n\n  const addImage = useCallback(() => {\n    if (fileRef.current) {\n      fileRef.current.click();\n    }\n  }, []);\n\n  const fileRef = useRef<HTMLInputElement>(null);\n\n  return {\n    editor,\n    menuActions: {\n      hasImageAPI: uploadImage !== undefined,\n      addImage,\n      currentHeading,\n      fileRef,\n      handleSelectImg,\n    },\n    toggles: {\n      splitListItem,\n      toggleBold,\n      toggleUnderline,\n      toggleItalic,\n      toggleStrike,\n      toggleHeading,\n      toggleNormal,\n      toggleCode,\n      toggleBlockquote,\n      toggleBulletList,\n      toggleOrderedList,\n      toggleTextAlign,\n      toggleHighlight,\n      toggleUndo,\n      toggleRedo,\n    },\n    isActive: {\n      isBold: editor ? editor.isActive(\"bold\") : false,\n      isUnderline: editor ? editor.isActive(\"underline\") : false,\n      isItalic: editor ? editor.isActive(\"italic\") : false,\n      isStrike: editor ? editor.isActive(\"strike\") : false,\n      isCode: editor ? editor.isActive(\"code\") : false,\n      isBlockquote: editor ? editor.isActive(\"blockquote\") : false,\n      isBulletList: editor ? editor.isActive(\"bulletList\") : false,\n      isOrderedList: editor ? editor.isActive(\"orderedList\") : false,\n      isHighlight: editor ? editor.isActive(\"highlight\") : false,\n      isLeftAlign: editor\n        ? editor.isActive(\"textAlign\", { align: \"left\" })\n        : false,\n      isCenterAlign: editor\n        ? editor.isActive(\"textAlign\", { align: \"center\" })\n        : false,\n      isRightAlign: editor\n        ? editor.isActive(\"textAlign\", { align: \"right\" })\n        : false,\n      isJustifyAlign: editor\n        ? editor.isActive(\"textAlign\", { align: \"justify\" })\n        : false,\n    },\n  };\n}\n","import {\n  LuAlignCenter,\n  LuAlignJustify,\n  LuAlignLeft,\n  LuAlignRight,\n  LuBold,\n  LuCode,\n  LuHighlighter,\n  LuImage,\n  LuItalic,\n  LuList,\n  LuListOrdered,\n  LuQuote,\n  LuRedo,\n  LuSplit,\n  LuStrikethrough,\n  LuUnderline,\n  LuUndo,\n} from \"react-icons/lu\";\nimport React from \"react\";\n\nimport { Level } from \"@tiptap/extension-heading\";\ntype Props = {\n  toggles: {\n    toggleHeading: (level: Level) => void;\n    toggleNormal: () => void;\n    toggleBold: () => void;\n    toggleItalic: () => void;\n    toggleStrike: () => void;\n    toggleUnderline: () => void;\n    splitListItem: () => void;\n    toggleBlockquote: () => void;\n    toggleBulletList: () => void;\n    toggleOrderedList: () => void;\n    toggleCode: () => void;\n    toggleTextAlign: (align: \"left\" | \"center\" | \"right\" | \"justify\") => void;\n    toggleHighlight: () => void;\n    toggleRedo: () => void;\n    toggleUndo: () => void;\n  };\n  menuActions: {\n    currentHeading: Level | 0;\n    addImage: () => void;\n    fileRef: React.RefObject<HTMLInputElement>;\n    handleSelectImg: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    hasImageAPI: boolean;\n  };\n  isActive: {\n    isBold: boolean;\n    isItalic: boolean;\n    isStrike: boolean;\n    isUnderline: boolean;\n    isBlockquote: boolean;\n    isBulletList: boolean;\n    isOrderedList: boolean;\n    isCode: boolean;\n    isHighlight: boolean;\n  };\n  boxStyle?: React.CSSProperties;\n  buttonStyle?: React.CSSProperties;\n  activeButtonStyle?: React.CSSProperties;\n  selectStyle?: React.CSSProperties;\n};\n\nexport default function MenuBar({\n  toggles: {\n    toggleHeading,\n    toggleNormal,\n    toggleBold,\n    toggleItalic,\n    toggleStrike,\n    toggleUnderline,\n    splitListItem,\n    toggleBlockquote,\n    toggleBulletList,\n    toggleOrderedList,\n    toggleCode,\n    toggleTextAlign,\n    toggleHighlight,\n    toggleRedo,\n    toggleUndo,\n  },\n  menuActions: {\n    currentHeading,\n    addImage,\n    fileRef,\n    handleSelectImg,\n    hasImageAPI,\n  },\n  isActive: {\n    isBold,\n    isItalic,\n    isStrike,\n    isUnderline,\n    isBlockquote,\n    isBulletList,\n    isOrderedList,\n    isCode,\n    isHighlight,\n  },\n  boxStyle,\n  activeButtonStyle,\n  buttonStyle,\n  selectStyle,\n}: Props) {\n  return (\n    <div className=\"tiptap-menu\" style={boxStyle}>\n      <button onClick={toggleUndo} style={buttonStyle} title=\"Undo\">\n        <LuUndo />\n      </button>\n      <button onClick={toggleRedo} style={buttonStyle} title=\"Redo\">\n        <LuRedo />\n      </button>\n      <button\n        onClick={toggleBold}\n        style={!isBold ? buttonStyle : { ...buttonStyle, ...activeButtonStyle }}\n        title=\"Bold\"\n      >\n        <LuBold />\n      </button>\n      <button\n        onClick={toggleItalic}\n        style={\n          !isItalic ? buttonStyle : { ...buttonStyle, ...activeButtonStyle }\n        }\n        title=\"Italic\"\n      >\n        <LuItalic />\n      </button>\n      <button\n        onClick={toggleStrike}\n        style={\n          !isStrike ? buttonStyle : { ...buttonStyle, ...activeButtonStyle }\n        }\n        title=\"Strike\"\n      >\n        <LuStrikethrough />\n      </button>\n      <button\n        onClick={toggleUnderline}\n        style={\n          !isUnderline ? buttonStyle : { ...buttonStyle, ...activeButtonStyle }\n        }\n        title=\"Underline\"\n      >\n        <LuUnderline />\n      </button>\n      <select\n        title=\"Heading\"\n        style={selectStyle}\n        value={currentHeading.toString()}\n        onChange={(e) => {\n          if (parseInt(e.target.value) === 0) {\n            toggleNormal();\n            return;\n          }\n          toggleHeading(parseInt(e.target.value) as Level);\n        }}\n      >\n        <option value={0}>Normal</option>\n        {Array.from(Array(6).keys()).map((_, index) => (\n          <option key={index} value={index + 1}>\n            Heading {index + 1}\n          </option>\n        ))}\n      </select>\n      <button\n        onClick={toggleCode}\n        style={!isCode ? buttonStyle : { ...buttonStyle, ...activeButtonStyle }}\n        title=\"Code\"\n      >\n        <LuCode />\n      </button>\n      <button\n        onClick={toggleBlockquote}\n        style={\n          !isBlockquote ? buttonStyle : { ...buttonStyle, ...activeButtonStyle }\n        }\n        title=\"Blockquote\"\n      >\n        <LuQuote />\n      </button>\n      <button\n        onClick={toggleBulletList}\n        style={\n          !isBulletList ? buttonStyle : { ...buttonStyle, ...activeButtonStyle }\n        }\n        title=\"Bullet List\"\n      >\n        <LuList />\n      </button>\n      <button\n        onClick={toggleOrderedList}\n        style={\n          !isOrderedList\n            ? buttonStyle\n            : { ...buttonStyle, ...activeButtonStyle }\n        }\n        title=\"Ordered List\"\n      >\n        <LuListOrdered />\n      </button>\n      <button\n        onClick={splitListItem}\n        style={buttonStyle}\n        title=\"Split List Item\"\n      >\n        <LuSplit />\n      </button>\n      <button\n        onClick={() => toggleTextAlign(\"left\")}\n        style={buttonStyle}\n        title=\"Align Left\"\n      >\n        <LuAlignLeft />\n      </button>\n      <button\n        onClick={() => toggleTextAlign(\"center\")}\n        style={buttonStyle}\n        title=\"Align Center\"\n      >\n        <LuAlignCenter />\n      </button>\n      <button\n        onClick={() => toggleTextAlign(\"right\")}\n        style={buttonStyle}\n        title=\"Align Right\"\n      >\n        <LuAlignRight />\n      </button>\n      <button\n        onClick={() => toggleTextAlign(\"justify\")}\n        style={buttonStyle}\n        title=\"Align Justify\"\n      >\n        <LuAlignJustify />\n      </button>\n      <button\n        onClick={() => toggleHighlight()}\n        style={\n          !isHighlight ? buttonStyle : { ...buttonStyle, ...activeButtonStyle }\n        }\n        title=\"Highlight\"\n      >\n        <LuHighlighter />\n      </button>\n      {hasImageAPI && (\n        <>\n          <input\n            type=\"file\"\n            id=\"file\"\n            ref={fileRef}\n            multiple={false}\n            onChange={handleSelectImg}\n          />\n          <button onClick={addImage} style={buttonStyle} title=\"Add Image\">\n            <LuImage />\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Editor, EditorContent } from \"@tiptap/react\";\n\ntype Props = {\n  editor: Editor | undefined;\n  boxStyle?: React.CSSProperties;\n};\n\nexport default function ContentEditor({ editor, boxStyle }: Props) {\n  return (\n    <div className=\"tiptap-editor\" style={boxStyle}>\n      {editor && <EditorContent editor={editor} />}\n    </div>\n  );\n}\n"],"mappings":"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","names":["React"]}