{"version":3,"sources":["../src/index.ts","../src/TipTapEssential/useTipTap.ts","../src/TipTapEssential/MenuBar.tsx"],"sourcesContent":["import useTipTap from \"./TipTapEssential/useTipTap\";\nimport MenuBar from \"./TipTapEssential/MenuBar\";\nimport { EditorContent } from \"@tiptap/react\";\nimport \"./TipTapEssential/styles.css\";\n\nexport { useTipTap, MenuBar, EditorContent };\n","import { ChangeEvent, useCallback, useEffect, useMemo, useRef } from \"react\";\nimport React from \"react\";\nimport { useEditor, Editor } from \"@tiptap/react\";\nimport Document from \"@tiptap/extension-document\";\nimport Paragraph from \"@tiptap/extension-paragraph\";\nimport Text from \"@tiptap/extension-text\";\nimport Link from \"@tiptap/extension-link\";\nimport Bold from \"@tiptap/extension-bold\";\nimport Underline from \"@tiptap/extension-underline\";\nimport Italic from \"@tiptap/extension-italic\";\nimport Strike from \"@tiptap/extension-strike\";\nimport History from \"@tiptap/extension-history\";\nimport Heading, { Level } from \"@tiptap/extension-heading\";\nimport Placeholder from \"@tiptap/extension-placeholder\";\nimport Code from \"@tiptap/extension-code\";\nimport Blockquote from \"@tiptap/extension-blockquote\";\nimport ListItem from \"@tiptap/extension-list-item\";\nimport BulletList from \"@tiptap/extension-bullet-list\";\nimport OrderedList from \"@tiptap/extension-ordered-list\";\nimport Image from \"@tiptap/extension-image\";\nimport Highlight from \"@tiptap/extension-highlight\";\nimport TextAlign from \"@tiptap/extension-text-align\";\n\ntype Props = {\n  placeholder?: string;\n  content?: string;\n  setContent: (content: string) => void;\n  uploadImage?: () => Promise<string>;\n};\n\nexport default function useTipTap({\n  placeholder,\n  content,\n  setContent,\n  uploadImage,\n}: Props) {\n  const editor = useEditor({\n    extensions: [\n      Document,\n      History,\n      Paragraph,\n      Text,\n      Link.configure({\n        openOnClick: false,\n      }),\n      Bold,\n      Underline,\n      Italic,\n      Strike,\n      Heading,\n      Placeholder.configure({\n        placeholder: placeholder || \"\",\n      }),\n      Code,\n      Blockquote,\n      BulletList,\n      OrderedList,\n      ListItem,\n      Image.configure({\n        inline: true,\n      }),\n      Highlight,\n      TextAlign.configure({\n        types: [\"heading\", \"paragraph\"],\n      }),\n    ],\n    content,\n  }) as Editor;\n\n  useEffect(() => {\n    if (editor) {\n      setContent(editor.getHTML());\n    }\n  }, [editor, setContent]);\n\n  const toggleBold = useCallback(() => {\n    editor.chain().focus().toggleBold().run();\n  }, [editor]);\n\n  const toggleUnderline = useCallback(() => {\n    editor.chain().focus().toggleUnderline().run();\n  }, [editor]);\n\n  const toggleItalic = useCallback(() => {\n    editor.chain().focus().toggleItalic().run();\n  }, [editor]);\n\n  const toggleStrike = useCallback(() => {\n    editor.chain().focus().toggleStrike().run();\n  }, [editor]);\n\n  const toggleNormal = useCallback(() => {\n    editor.chain().focus().setParagraph().run();\n  }, [editor]);\n\n  const toggleHeading = useCallback(\n    (level: Level) => {\n      editor.chain().focus().setHeading({ level }).run();\n    },\n    [editor]\n  );\n\n  const heading = editor ? editor.getAttributes(\"heading\") : undefined;\n\n  const currentHeading = useMemo((): Level | 0 => {\n    if (heading) {\n      return heading.level || 0;\n    }\n    return 0;\n  }, [heading]);\n\n  const toggleCode = useCallback(() => {\n    editor.chain().focus().toggleCode().run();\n  }, [editor]);\n\n  const toggleBlockquote = useCallback(() => {\n    editor.chain().focus().toggleBlockquote().run();\n  }, [editor]);\n\n  const toggleBulletList = useCallback(() => {\n    editor.chain().focus().toggleBulletList().run();\n  }, [editor]);\n\n  const toggleOrderedList = useCallback(() => {\n    editor.chain().focus().toggleOrderedList().run();\n  }, [editor]);\n\n  const splitListItem = useCallback(() => {\n    editor.chain().focus().splitListItem(\"listItem\").run();\n  }, [editor]);\n\n  const toggleTextAlign = useCallback(\n    (align: \"left\" | \"center\" | \"right\") => {\n      editor.chain().focus().setTextAlign(align).run();\n    },\n    [editor]\n  );\n\n  const toggleHighlight = useCallback(() => {\n    editor.chain().focus().toggleHighlight().run();\n  }, [editor]);\n\n  const toggleUndo = useCallback(() => {\n    editor.chain().focus().undo().run();\n  }, [editor]);\n\n  const toggleRedo = useCallback(() => {\n    editor.chain().focus().redo().run();\n  }, [editor]);\n\n  const handleSelectImg = useCallback(\n    async ({ target }: ChangeEvent<HTMLInputElement>) => {\n      const files = target.files;\n      if (!files) return;\n      if (uploadImage === undefined) return;\n      try {\n        const ret = (await uploadImage()) as string;\n        editor.chain().focus().setImage({ src: ret }).run();\n      } catch (error) {\n        alert((error as Error).message);\n        return;\n      }\n    },\n    [editor]\n  );\n\n  const addImage = useCallback(() => {\n    if (fileRef.current) {\n      fileRef.current.click();\n    }\n  }, []);\n\n  const fileRef = useRef<HTMLInputElement>(null);\n\n  return {\n    editor,\n    menuActions: {\n      addImage,\n      currentHeading,\n      fileRef,\n      handleSelectImg,\n    },\n    toggles: {\n      splitListItem,\n      toggleBold,\n      toggleUnderline,\n      toggleItalic,\n      toggleStrike,\n      toggleHeading,\n      toggleNormal,\n      toggleCode,\n      toggleBlockquote,\n      toggleBulletList,\n      toggleOrderedList,\n      toggleTextAlign,\n      toggleHighlight,\n      toggleUndo,\n      toggleRedo,\n    },\n  };\n}\n","import {\n  LuAlignCenter,\n  LuAlignLeft,\n  LuAlignRight,\n  LuBold,\n  LuCode,\n  LuHighlighter,\n  LuImage,\n  LuItalic,\n  LuList,\n  LuListOrdered,\n  LuQuote,\n  LuRedo,\n  LuSplit,\n  LuStrikethrough,\n  LuUnderline,\n  LuUndo,\n} from \"react-icons/lu\";\nimport React from \"react\";\n\nimport { Level } from \"@tiptap/extension-heading\";\ntype Props = {\n  toggles: {\n    toggleHeading: (level: Level) => void;\n    toggleNormal: () => void;\n    toggleBold: () => void;\n    toggleItalic: () => void;\n    toggleStrike: () => void;\n    toggleUnderline: () => void;\n    splitListItem: () => void;\n    toggleBlockquote: () => void;\n    toggleBulletList: () => void;\n    toggleOrderedList: () => void;\n    toggleCode: () => void;\n    toggleTextAlign: (align: \"left\" | \"center\" | \"right\") => void;\n    toggleHighlight: () => void;\n    toggleRedo: () => void;\n    toggleUndo: () => void;\n  };\n  menuActions: {\n    currentHeading: Level | 0;\n    addImage: () => void;\n    fileRef: React.RefObject<HTMLInputElement>;\n    handleSelectImg: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  };\n};\n\nexport default function MenuBar({\n  toggles: {\n    toggleHeading,\n    toggleNormal,\n    toggleBold,\n    toggleItalic,\n    toggleStrike,\n    toggleUnderline,\n    splitListItem,\n    toggleBlockquote,\n    toggleBulletList,\n    toggleOrderedList,\n    toggleCode,\n    toggleTextAlign,\n    toggleHighlight,\n    toggleRedo,\n    toggleUndo,\n  },\n  menuActions: { currentHeading, addImage, fileRef, handleSelectImg },\n}: Props) {\n  return (\n    <div className=\"tiptap-menu\">\n      <button onClick={toggleUndo}>\n        <LuUndo />\n      </button>\n      <button onClick={toggleRedo}>\n        <LuRedo />\n      </button>\n      <button onClick={toggleBold}>\n        <LuBold />\n      </button>\n      <button onClick={toggleItalic}>\n        <LuItalic />\n      </button>\n      <button onClick={toggleStrike}>\n        <LuStrikethrough />\n      </button>\n      <button onClick={toggleUnderline}>\n        <LuUnderline />\n      </button>\n      <select\n        value={currentHeading.toString()}\n        onChange={(e) => {\n          if (parseInt(e.target.value) === 0) {\n            toggleNormal();\n            return;\n          }\n          toggleHeading(parseInt(e.target.value) as Level);\n        }}\n      >\n        <option value={0}>Normal</option>\n        {Array.from(Array(6).keys()).map((_, index) => (\n          <option key={index} value={index + 1}>\n            Heading {index + 1}\n          </option>\n        ))}\n      </select>\n      <button onClick={toggleCode}>\n        <LuCode />\n      </button>\n      <button onClick={toggleBlockquote}>\n        <LuQuote />\n      </button>\n      <button onClick={toggleBulletList}>\n        <LuList />\n      </button>\n      <button onClick={toggleOrderedList}>\n        <LuListOrdered />\n      </button>\n      <button onClick={splitListItem}>\n        <LuSplit />\n      </button>\n      <button onClick={() => toggleTextAlign(\"left\")}>\n        <LuAlignLeft />\n      </button>\n      <button onClick={() => toggleTextAlign(\"center\")}>\n        <LuAlignCenter />\n      </button>\n      <button onClick={() => toggleTextAlign(\"right\")}>\n        <LuAlignRight />\n      </button>\n      <button onClick={() => toggleHighlight()}>\n        <LuHighlighter />\n      </button>\n      <input\n        type=\"file\"\n        id=\"file\"\n        ref={fileRef}\n        multiple={false}\n        onChange={handleSelectImg}\n      />\n      <button onClick={addImage}>\n        <LuImage />\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","names":["import_react","Document","History","Paragraph","Text","Link","Bold","Underline","Italic","Strike","Heading","Placeholder","Code","Blockquote","BulletList","OrderedList","ListItem","Image","Highlight","TextAlign","import_react","React","import_react"]}